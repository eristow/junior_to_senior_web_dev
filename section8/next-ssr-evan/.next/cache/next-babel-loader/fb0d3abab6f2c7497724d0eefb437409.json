{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Tutorials\\\\junior_to_senior_web_dev\\\\section8\\\\next-ssr\\\\pages\\\\robots.js\";\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = ({\n  robots\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Robots\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    href: \"/\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: robots.map(robot => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: `robot/`,\n        children: robot.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 28\n      }, this)\n    }, robot.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\nRobots.getInitialProps = async () => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  const data = await res.json();\n  return {\n    robots: data\n  };\n};\n\nexport default Robots;","map":{"version":3,"sources":["C:/Projects/Tutorials/junior_to_senior_web_dev/section8/next-ssr/pages/robots.js"],"names":["Link","fetch","Robots","robots","map","robot","name","id","getInitialProps","res","data","json"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACb;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF,eAKE;AAAA,cACGA,MAAM,CAACC,GAAP,CAAYC,KAAD,iBACV;AAAA,6BAAmB,QAAC,IAAD;AAAM,QAAA,IAAI,EAAG,QAAb;AAAA,kBAAuBA,KAAK,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAAnB,OAASD,KAAK,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UALF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAcAL,MAAM,CAACM,eAAP,GAAyB,YAAY;AACnC,QAAMC,GAAG,GAAG,MAAMR,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMS,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,SAAO;AACLR,IAAAA,MAAM,EAAEO;AADH,GAAP;AAGD,CAND;;AAQA,eAAeR,MAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = ({ robots }) => (\n  <div>\n    <h1>Robots</h1>\n    <Link href=\"/\">\n      <button>Home</button>\n    </Link>\n    <ul>\n      {robots.map((robot) => (\n        <li key={robot.id}><Link href={`robot/`}>{robot.name}</Link></li>\n      ))}\n    </ul>\n  </div>\n);\n\nRobots.getInitialProps = async () => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  const data = await res.json();\n  return {\n    robots: data,\n  };\n};\n\nexport default Robots;\n"]},"metadata":{},"sourceType":"module"}