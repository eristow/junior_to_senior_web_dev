{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\Tutorials\\\\junior_to_senior_web_dev\\\\section8\\\\next-ssr\\\\pages\\\\robots.js\",\n    _this = this;\n\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Robots = function Robots(_ref) {\n  var robots = _ref.robots;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Robots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: robots.map(function (robot) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/robots/\".concat(robot.id),\n            children: robot.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 11\n          }, _this)\n        }, robot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = Robots;\nRobots.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://jsonplaceholder.typicode.com/users');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            robots: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Robots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Robots\");","map":{"version":3,"sources":["C:/Projects/Tutorials/junior_to_senior_web_dev/section8/next-ssr/pages/robots.js"],"names":["Link","fetch","Robots","robots","map","robot","id","name","getInitialProps","res","json","data"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,sBACb;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF,eAKE;AAAA,gBACGA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD;AAAA,4BACV;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,oBAAaA,KAAK,CAACC,EAAnB,CAAV;AAAA,sBAAoCD,KAAK,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF,WAASF,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAX;AADH;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADa;AAAA,CAAf;;KAAMJ,M;AAgBNA,MAAM,CAACM,eAAP,yEAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACLP,KAAK,CAAC,4CAAD,CADA;;AAAA;AACjBQ,UAAAA,GADiB;AAAA;AAAA,iBAEJA,GAAG,CAACC,IAAJ,EAFI;;AAAA;AAEjBC,UAAAA,IAFiB;AAAA,2CAGhB;AACLR,YAAAA,MAAM,EAAEQ;AADH,WAHgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAQA,eAAeT,MAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = ({ robots }) => (\n  <div>\n    <h1>Robots</h1>\n    <Link href=\"/\">\n      <button>Home</button>\n    </Link>\n    <ul>\n      {robots.map((robot) => (\n        <li key={robot.id}>\n          <Link href={`/robots/${robot.id}`}>{robot.name}</Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nRobots.getInitialProps = async () => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  const data = await res.json();\n  return {\n    robots: data,\n  };\n};\n\nexport default Robots;\n"]},"metadata":{},"sourceType":"module"}